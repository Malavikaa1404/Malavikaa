# -*- coding: utf-8 -*-
"""exploring supervised machine learning by Malavikaa

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10SkOYRNxnmeNyfGMEOCFZGCxzmNQDqZA

Importing required Libraries
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

"""Importing Given Data"""

# Reading data from the link given:
url = "http://bit.ly/w-data"
data1 = pd.read_csv(url)
print("Data imported successfully")

data1.head(10)

"""Plotting data to find if there is any relationship between the data"""

#plotting data
data1.plot(x="Hours",y="Scores",style="o")
plt.title("Hours of study")
plt.xlabel("Hours Studied")
plt.ylabel("Score Percentage")
plt.show()

"""**Preparing Data and Splitting data into Training Sets:**"""

x=data1.iloc[:,:-1].values
y=data1.iloc[:,1].values

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(x_train, y_train)

print("Training completed.")

# Plotting the regression line
line = regressor.coef_*x+regressor.intercept_

# Plotting for test data
plt.scatter(x, y)
plt.plot(x, line);
plt.show()

"""**Making Predictions:**"""

print(x_test) # Testing data - In Hours
y_pred = regressor.predict(x_test) # Predicting the scores

# Comparing Actual vs Predicted
df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
df

#Visualizing actual vs predicted
df.plot(kind="bar",color=['b','g'])
plt.title("Actual vs Prediction")
plt.xlabel("Hours")
plt.ylabel("Scores")
plt.plot()

"""Predicting when hours of study = 9.25"""

m = 9.25
own_pred = regressor.predict([[m]])
print("No of Hours = {}".format(hours))
print("Predicted Score = {}".format(own_pred[0]))

"""# Evaluating the Model"""

from sklearn import metrics
print('Mean Absolute Error:',
      metrics.mean_absolute_error(y_test, y_pred))
